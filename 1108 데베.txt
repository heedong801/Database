1108 DB
PROJECT의 키 애트리뷰트가 number, name에 따라 해석
number일 경우 각 프로젝트마다 다른 프로젝트 번호 변경


질의어 - 관계대수

이항연산자 : 항이 2개가 필요한 연산자
2 + 3 = 5
항 : 2,3,5
연산자 : +, = 

---------------------------------------------

항 -> 표
연산자 -> 관계연산자
관계대수식 : 표와 관계연산자로 이루어진 식

관계해석은 선언적 언어
DBMS는 데이터 구조를 잘 알기 때문에 어떤 방법이 효율적인지 알아낼 수 있음
그래서 선언적 언어임에도 불구하고, 질의어에 대해 스스로 처리 가능

관계대수도 선언적 언어 but, 관계 해석보다 절차적임
왜? 약간의 절차성을 띄는가?
-수식이 절차성을 띔

선언적 언어
ex) 3.5이상 학생들 알아와

절차적 언어
ex) 과사 -> 컴퓨터 로긴 -> 프린트 -> 가져와

릴레이션은 튜플들의 집합.
즉 집합 연산자를 사용할 수 있다.
카티션 곱 = 곱집합 집합 연산자는 이항연산자
셀렉션과 프로젝션은 단항연산자

셀렉션 : 많은 튜플 등 중에서 내가 원하는 튜플만 골라냄 (행)
스키마는 바뀌지 않고, 결과 릴레이션의 상태를 새로 만든다

R이라는 릴레이션에서 c라는 조건을 만족하는 튜플을 뽑아줘 : 시그마c(R)
ex) 시그마dno = 3(EMPLOYEE) : 직원 릴레이션에서 DNO 애트리뷰트 값이 3인 직원들을 뽑아
**************************아래 첨자로 쓰는 것이 부분 점수 안까인다 !!
연습해봅시다.
1.EMPLOYEE에서 2번 부서 소속이면서 manager의 사원번호가 4377인 사람을 검색하라.
시그마manager = 4377 AND DNO = 2(EMPLOYEE)
2.EMPLOYEE에서 직급이 과장이거나 월급이 3000000원 미만인 사람을 검색하라.
시그마TITLE = 과장 OR SALARY < 3000000(EMPLOYEE)

프로젝션 : 많은 애트리뷰트 중에서 내가 원하는 애트리뷰트만 골라냄 (열)
ex)파이sex,salary(EMPLOYEE) : EMPLOYEE 중 sex,와 salary만 뽑아
뽑아낸 릴레이션 역시 중복이 없다
즉, 과장 과장이 아니고 과장

1.EMPLOYEE에서 모든 사원의 이름과 월급을 검색하라.
파이empname,salary(EMPLOYEE)
2.EMPLOYEE에서 월급이 2700000원 이상인 사원의 이름과 직급, 월급을 검색하라
파이empname,title,salary(시그마salary >= 27000000(EMPLOYEE))
3.EMPLOYEE에서 조민희씨의 직급을 검색하라.
파이title(시그마empname = 조민희(EMPLOYEE))

셀렉션과 프로젝션은 교환법칙이 성립할 수도 안할수 도 있다.
언제 성립하나?
프로젝션으로 인해 나온 결과가 셀렉션의 조건에 영향을 미치지 않으면 바꿔도 됨

무조건 셀렉션 먼저 쓰면 안전함********************
실제로 셀렉션을 먼저 쓴다 
왜? 많은 튜플들을 먼저 걸러내서 효율을 높일 수 있음.

중간관계를 위해 임시 저장소를 부여할 수 있음

{a,b} U {1,2,3} = XXX
안됨 왜? 두 집합의 도메인이 다르기 때문에 합집합이 불가능

R1, R2가 합집합 가능하려면
두 개의 애트리뷰트 갯수가 동일하고, 대응되는 도메인의 범위는 같아야 함
즉 스키마가 동일하면 두 릴레이션은 집합연산이 가능하다는 것 -- 합집합 호환성

기말 OX
두 개의 릴레이션이 되려면 합집합 호환성이 있어야 한다 O